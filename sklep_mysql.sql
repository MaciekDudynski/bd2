-- USUWANIE STAREJ BAZY DANYCH:
DROP TABLE IF EXISTS ZAMOWIENIA;
DROP TABLE IF EXISTS SZCZEGOLY_ZAMOWIENIA;
DROP TABLE IF EXISTS PRODUKTY;
DROP TABLE IF EXISTS DOSTAWCY;
DROP TABLE IF EXISTS KATEGORIE;
DROP TABLE IF EXISTS PRACOWNICY;
DROP TABLE IF EXISTS KLIENCI;
DROP TABLE IF EXISTS KONTAKTY;
DROP TABLE IF EXISTS ADRESY;

-- ------------------------------------------------------------------------------

-- DODAWANIE TABEL WRAZ Z TRIGGERAMI:

CREATE TABLE ADRESY(
ID_ADRES INT PRIMARY KEY AUTO_INCREMENT,
MIASTO VARCHAR(30) NOT NULL,
ULICA VARCHAR(30) NOT NULL,
NR_BUDYNKU INT NOT NULL,
NR_LOKALU INT,
MIASTO_POCZTOWE VARCHAR(30) NOT NULL,
KOD_POCZTOWY VARCHAR(10) NOT NULL);

-- ------------------------------------------------------------------------------

CREATE TABLE KONTAKTY(
ID_KONTAKT INT PRIMARY KEY AUTO_INCREMENT,
NR_TEL VARCHAR(30),
EMAIL VARCHAR(30) NOT NULL);

-- ------------------------------------------------------------------------------

CREATE TABLE KLIENCI(
ID_KLIENT INT PRIMARY KEY AUTO_INCREMENT,
ID_ADRES INT REFERENCES ADRESY(ID_ADRES),
ID_KONTAKT INT REFERENCES KONTAKTY(ID_KONTAKT),
MD5_LOGIN VARCHAR(50),
MD5_HASLO VARCHAR(50),
IMIE_KLIENTA VARCHAR(30) NOT NULL,
NAZWISKO_KLIENTA VARCHAR(30) NOT NULL);

-- ------------------------------------------------------------------------------

CREATE TABLE PRACOWNICY(
ID_PRACOWNIK INT PRIMARY KEY AUTO_INCREMENT,
ID_ADRES INT REFERENCES ADRESY(ID_ADRES),
ID_KONTAKT INT REFERENCES KONTAKTY(ID_KONTAKT),
MD5_LOGIN VARCHAR(50),
MD5_HASLO VARCHAR(50),
IMIE_PRACOWNIKA VARCHAR(30) NOT NULL,
NAZWISKO_PRACOWNIKA VARCHAR(30) NOT NULL,
STANOWISKO VARCHAR(30) NOT NULL,
DATA_ZATRUDNIENIA DATE NOT NULL);

-- ------------------------------------------------------------------------------

CREATE TABLE KATEGORIE(
ID_KATEGORIA INT PRIMARY KEY AUTO_INCREMENT,
NAZWA_KATEGORII VARCHAR(30) NOT NULL);

-- ------------------------------------------------------------------------------

CREATE TABLE DOSTAWCY(
ID_DOSTAWCA INT PRIMARY KEY AUTO_INCREMENT,
ID_ADRES INT REFERENCES ADRESY(ID_ADRES),
ID_KONTAKT INT REFERENCES KONTAKTY(ID_KONTAKT),
NAZWA_DOSTAWCY VARCHAR(30));

-- ------------------------------------------------------------------------------

CREATE TABLE PRODUKTY(
ID_PRODUKT INT PRIMARY KEY AUTO_INCREMENT,
ID_KATEGORIA INT REFERENCES KATEGORIE(ID_KATEGORIA),
ID_DOSTAWCA INT REFERENCES DOSTAWCY(ID_DOSTAWCA),
NAZWA_PRODUKTU VARCHAR(70) NOT NULL,
CENA_NETTO FLOAT(10, 2) NOT NULL,
VAT FLOAT(2, 0),
ILOSC FLOAT(5, 0));

-- ------------------------------------------------------------------------------

CREATE TABLE SZCZEGOLY_ZAMOWIENIA(
ID_SZCZEGOLY_ZAMOWIENIA INT PRIMARY KEY AUTO_INCREMENT,
ID_KLIENT INT REFERENCES KLIENCI(ID_KLIENT),
ID_PRACOWNIK INT REFERENCES PRACOWNICY(ID_PRACOWNIK),
DATA_ZLOZENIA_ZAMOWIENIA DATE NOT NULL,
DATA_REALIZACJI_ZAMOWIENIA DATE NOT NULL);

-- ------------------------------------------------------------------------------

CREATE TABLE ZAMOWIENIA(
ID_ZAMOWIENIA INT PRIMARY KEY AUTO_INCREMENT,
ID_SZCZEGOLY_ZAMOWIENIA INT REFERENCES SZCZEGOLY_ZAMOWIENIA(ID_SZCZEGOLY_ZAMOWIENIA),
ID_PRODUKT INT REFERENCES PRODUKTY(ID_PRODUKT),
ILOSC INT(3));

-- ------------------------------------------------------------------------------

-- DODAJ PROCEDURY ORAZ FUNKCJE:

-- Funkcja haszująca
DROP FUNCTION IF EXISTS getHashVal;
CREATE FUNCTION getHashVal (p_in VARCHAR(50))
       RETURNS VARCHAR(50) RETURN SHA2(p_in, 50);

-- ------------------------------------------------------------------------------

DELIMITER $$

DROP PROCEDURE IF EXISTS DODAJ_KLIENTA$$
CREATE PROCEDURE DODAJ_KLIENTA(
IN imie VARCHAR(30),
IN nazwisko VARCHAR(30),
IN login VARCHAR(50),
IN haslo VARCHAR(50),
IN telefon VARCHAR(30),
IN email VARCHAR(30),
IN miasto VARCHAR(30),
IN ulica VARCHAR(30),
IN nr_budynku INT,
IN nr_lokalu INT,
IN poczta VARCHAR(30),
IN kod_pocztowy VARCHAR(10))
BEGIN
INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES (miasto, ulica, nr_budynku, nr_lokalu, poczta, kod_pocztowy);
SET @adresy_id = LAST_INSERT_ID();
INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES (telefon, email);
SET @kontakty_id = LAST_INSERT_ID();
-- INSERT INTO KLIENCI (ID_ADRES, ID_KONTAKT, MD5_LOGIN, MD5_HASLO, IMIE_KLIENTA, NAZWISKO_KLIENTA) VALUES ( (SELECT ID_ADRES FROM ADRESY WHERE ROWID = (SELECT MAX(ROWID) from ADRESY)), (SELECT ID_KONTAKT FROM KONTAKTY WHERE ROWID = (SELECT MAX(ROWID) from KONTAKTY)), login, haslo, imie, nazwisko);
INSERT INTO KLIENCI (ID_ADRES, ID_KONTAKT, MD5_LOGIN, MD5_HASLO, IMIE_KLIENTA, NAZWISKO_KLIENTA) VALUES (adresy_id, kontakty_id, login, haslo, imie, nazwisko);
SET @klienci_id = LAST_INSERT_ID();
UPDATE KLIENCI SET KLIENCI.MD5_LOGIN = get_hash_val(KLIENCI.MD5_LOGIN) WHERE KLIENCI.ID_KLIENT = klienci_id;
UPDATE KLIENCI SET KLIENCI.MD5_HASLO = get_hash_val(KLIENCI.MD5_HASLO) WHERE KLIENCI.ID_KLIENT = klienci_id;
END$$

-- ------------------------------------------------------------------------------

DROP PROCEDURE IF EXISTS DODAJ_PRACOWNIKA$$
CREATE PROCEDURE DODAJ_PRACOWNIKA(
IN imie VARCHAR(30),
IN nazwisko VARCHAR(30),
IN login VARCHAR(50),
IN haslo VARCHAR(50),
IN telefon VARCHAR(30),
IN email VARCHAR(30),
IN miasto VARCHAR(30),
IN ulica VARCHAR(30),
IN nr_budynku INT,
IN nr_lokalu INT,
IN poczta VARCHAR(30),
IN kod_pocztowy VARCHAR(10),
stanowisko VARCHAR(30),
data_zatrudnienia DATE)
BEGIN
INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES (miasto, ulica, nr_budynku, nr_lokalu, poczta, kod_pocztowy);
SET @adresy_id = LAST_INSERT_ID();
INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES (telefon, email);
SET @kontakty_id = LAST_INSERT_ID();
-- INSERT INTO PRACOWNICY (ID_ADRES, ID_KONTAKT, MD5_LOGIN, MD5_HASLO, IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, STANOWISKO, DATA_ZATRUDNIENIA) VALUES ( (SELECT ID_ADRES FROM ADRESY WHERE ROWID = (SELECT MAX(ROWID) from ADRESY)), (SELECT ID_KONTAKT FROM KONTAKTY WHERE ROWID = (SELECT MAX(ROWID) from KONTAKTY)), login, haslo, imie, nazwisko, stanowisko, data_zatrudnienia);
INSERT INTO PRACOWNICY (ID_ADRES, ID_KONTAKT, MD5_LOGIN, MD5_HASLO, IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, STANOWISKO, DATA_ZATRUDNIENIA) VALUES (adresy_id, kontakty_id, login, haslo, imie, nazwisko, stanowisko, data_zatrudnienia);
SET @pracownicy_id = LAST_INSERT_ID();
UPDATE PRACOWNICY SET PRACOWNICY.MD5_LOGIN = get_hash_val (PRACOWNICY.MD5_LOGIN) WHERE PRACOWNICY.PRACOWNIK_ID = pracownicy_id;
UPDATE PRACOWNICY SET PRACOWNICY.MD5_HASLO = get_hash_val (PRACOWNICY.MD5_HASLO) WHERE PRACOWNICY.PRACOWNIK_ID = pracownicy_id;
END$$

-- ------------------------------------------------------------------------------

DROP PROCEDURE IF EXISTS DODAJ_DOSTAWCE$$
CREATE PROCEDURE DODAJ_DOSTAWCE(
IN nazwa VARCHAR(30),
IN telefon VARCHAR(30),
IN email VARCHAR(30),
IN miasto VARCHAR(30),
IN ulica VARCHAR(30),
IN nr_budynku INT,
IN nr_lokalu INT,
IN poczta VARCHAR(30),
IN kod_pocztowy VARCHAR(10))
BEGIN
INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES (miasto, ulica, nr_budynku, nr_lokalu, poczta, kod_pocztowy);
SET @adresy_id = LAST_INSERT_ID();
INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES (telefon, email);
SET @kontakty_id = LAST_INSERT_ID();
-- INSERT INTO DOSTAWCY (ID_ADRES, ID_KONTAKT, NAZWA_DOSTAWCY) VALUES ( (SELECT ID_ADRES FROM ADRESY WHERE ROWID = (SELECT MAX(ROWID) from ADRESY)), (SELECT ID_KONTAKT FROM KONTAKTY WHERE ROWID = (SELECT MAX(ROWID) from KONTAKTY)), nazwa);
INSERT INTO DOSTAWCY (ID_ADRES, ID_KONTAKT, NAZWA_DOSTAWCY) VALUES (adresy_id, kontakty_id, nazwa);
END$$

-- ------------------------------------------------------------------------------

DROP PROCEDURE IF EXISTS DODAJ_PRODUKT$$
CREATE PROCEDURE DODAJ_PRODUKT(
IN nazwa VARCHAR(70),
IN cena FLOAT(10, 2),
IN vat FLOAT(2, 0),
IN ilosc FLOAT(5, 0),
IN kategoria VARCHAR(30),
IN dostawca VARCHAR(30))
BEGIN
INSERT INTO PRODUKTY (ID_KATEGORIA, NAZWA_PRODUKTU, CENA_NETTO, VAT, ILOSC, ID_DOSTAWCA) 
	VALUES ( (SELECT ID_KATEGORIA FROM KATEGORIE WHERE NAZWA_KATEGORII = kategoria), nazwa, cena, vat, ilosc, (SELECT ID_DOSTAWCA FROM DOSTAWCY WHERE NAZWA_DOSTAWCY = dostawca));
END$$

-- ------------------------------------------------------------------------------

DROP PROCEDURE IF EXISTS DODAJ_ZAMOWIENIE$$
CREATE PROCEDURE DODAJ_ZAMOWIENIE(
IN imiek VARCHAR(30),
IN nazwiskok VARCHAR(30),
IN imiep VARCHAR(30),
IN nazwiskop VARCHAR(30),
IN produkt VARCHAR(70),
IN ilosc FLOAT(5, 0),
IN dataz DATE,
IN datar DATE)
BEGIN
INSERT INTO SZCZEGOLY_ZAMOWIENIA (ID_KLIENT, ID_PRACOWNIK, DATA_ZLOZENIA_ZAMOWIENIA, DATA_REALIZACJI_ZAMOWIENIA) VALUES ( (SELECT ID_KLIENT FROM KLIENCI WHERE IMIE_KLIENTA = imiek AND NAZWISKO_KLIENTA = nazwiskok), (SELECT ID_PRACOWNIK FROM PRACOWNICY WHERE IMIE_PRACOWNIKA = imiep AND NAZWISKO_PRACOWNIKA = nazwiskop), dataz, datar);
-- INSERT INTO ZAMOWIENIA (ID_SZCZEGOLY_ZAMOWIENIA, ILOSC, ID_PRODUKT) VALUES ((SELECT ID_SZCZEGOLY_ZAMOWIENIA FROM SZCZEGOLY_ZAMOWIENIA WHERE ROWID = (SELECT MAX(ROWID) from SZCZEGOLY_ZAMOWIENIA)), ilosc, (SELECT ID_PRODUKT FROM PRODUKTY WHERE NAZWA_PRODUKTU = produkt));
INSERT INTO ZAMOWIENIA (ID_SZCZEGOLY_ZAMOWIENIA, ILOSC, ID_PRODUKT) VALUES (sz_zam_inc_seq.CURRVAL, ilosc, (SELECT ID_PRODUKT FROM PRODUKTY WHERE NAZWA_PRODUKTU = produkt));
UPDATE PRODUKTY SET PRODUKTY.ILOSC = PRODUKTY.ILOSC - DODAJ_ZAMOWIENIE.ilosc WHERE NAZWA_PRODUKTU = produkt;
END$$

-- ------------------------------------------------------------------------------

DROP PROCEDURE IF EXISTS USUN_KLIENTA$$
CREATE PROCEDURE USUN_KLIENTA(
IN id INT)
BEGIN
SELECT ID_ADRES INTO @id_adress FROM KLIENCI WHERE ID_KLIENT = id;
SELECT ID_KONTAKT INTO @id_kontakt FROM KLIENCI WHERE ID_KLIENT = id;
DELETE FROM KLIENCI WHERE ID_KLIENT = id;
DELETE FROM ADRESY WHERE ID_ADRES = id_adress;
DELETE FROM KONTAKTY WHERE ID_KONTAKT = id_kontakt;
END$$

-- ------------------------------------------------------------------------------

DROP PROCEDURE IF EXISTS USUN_PRACOWNIKA$$
CREATE PROCEDURE USUN_PRACOWNIKA(
IN id INT)
BEGIN
SELECT ID_ADRES INTO @id_adress FROM PRACOWNICY WHERE ID_PRACOWNIK = id;
SELECT ID_KONTAKT INTO @id_kontakt FROM PRACOWNICY WHERE ID_PRACOWNIK = id;
DELETE FROM PRACOWNICY WHERE ID_PRACOWNIK = id;
DELETE FROM ADRESY WHERE ID_ADRES = id_adress;
DELETE FROM KONTAKTY WHERE ID_KONTAKT = id_kontakt;
END$$

-- ------------------------------------------------------------------------------

DROP PROCEDURE IF EXISTS USUN_DOSTAWCE$$
CREATE  PROCEDURE USUN_DOSTAWCE(
IN id INT)
BEGIN
SELECT ID_ADRES INTO @id_adress FROM DOSTAWCY WHERE ID_DOSTAWCA = id;
SELECT ID_KONTAKT INTO @id_kontakt FROM DOSTAWCY WHERE ID_DOSTAWCA = id;
DELETE FROM DOSTAWCY WHERE ID_DOSTAWCA = id;
DELETE FROM ADRESY WHERE ID_ADRES = id_adress;
DELETE FROM KONTAKTY WHERE ID_KONTAKT = id_kontakt;
END$$

DELIMITER ;

-- ------------------------------------------------------------------------------

-- DODAJ WIDOKI:

CREATE OR REPLACE VIEW WIDOK_KLIENCI AS SELECT ID_KLIENT, MD5_LOGIN, MD5_HASLO, IMIE_KLIENTA, NAZWISKO_KLIENTA, MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY, NR_TEL, EMAIL  FROM KLIENCI JOIN ADRESY USING(ID_ADRES) JOIN KONTAKTY USING(ID_KONTAKT);
CREATE OR REPLACE VIEW WIDOK_PRACOWNICY AS SELECT ID_PRACOWNIK, MD5_LOGIN, MD5_HASLO, IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, STANOWISKO, DATA_ZATRUDNIENIA, MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY, NR_TEL, EMAIL FROM PRACOWNICY JOIN ADRESY USING(ID_ADRES) JOIN KONTAKTY USING(ID_KONTAKT);
CREATE OR REPLACE VIEW WIDOK_DOSTAWCY AS SELECT ID_DOSTAWCA, NAZWA_DOSTAWCY, MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY, NR_TEL, EMAIL FROM DOSTAWCY JOIN ADRESY USING(ID_ADRES) JOIN KONTAKTY USING(ID_KONTAKT);
CREATE OR REPLACE VIEW WIDOK_PRODUKTY AS SELECT ID_PRODUKT, NAZWA_PRODUKTU, NAZWA_KATEGORII, CENA_NETTO, VAT, ROUND(CENA_NETTO*VAT/100+CENA_NETTO, 2) AS 'CENA_BRUTTO', ILOSC, NAZWA_DOSTAWCY FROM PRODUKTY JOIN KATEGORIE USING(ID_KATEGORIA) JOIN DOSTAWCY USING(ID_DOSTAWCA);
CREATE OR REPLACE VIEW WIDOK_ZAMOWIENIA AS SELECT ID_ZAMOWIENIA, ID_SZCZEGOLY_ZAMOWIENIA, IMIE_KLIENTA, NAZWISKO_KLIENTA, NAZWA_PRODUKTU, ZAMOWIENIA.ILOSC, (ROUND(CENA_NETTO*VAT/100+CENA_NETTO, 2)*ZAMOWIENIA.ILOSC) AS 'CENA_CALKOWITA', IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, DATA_ZLOZENIA_ZAMOWIENIA, DATA_REALIZACJI_ZAMOWIENIA FROM ZAMOWIENIA JOIN SZCZEGOLY_ZAMOWIENIA USING(ID_SZCZEGOLY_ZAMOWIENIA) JOIN PRODUKTY USING(ID_PRODUKT) JOIN KLIENCI USING(ID_KLIENT) JOIN PRACOWNICY USING(ID_PRACOWNIK);

-- ------------------------------------------------------------------------------


-- DODAJ DANE:

INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES ('Wrocław', 'Nowowiejska', 65, 4, 'Wrocław', '50-315');
INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES ('Wrocław', 'Metalowców', 5, 13, 'Wrocław', '54-156');
INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES ('Rawicz', 'Główna', 8, 4, 'Rawicz', '63-900');
INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES ('Wronki', 'Boczna', 19, 1, 'Wronki', '64-510');
INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES ('Oleśnica', 'Różana', 1, 1, 'Oleśnica', '56-400');
INSERT INTO ADRESY (MIASTO, ULICA, NR_BUDYNKU, NR_LOKALU, MIASTO_POCZTOWE, KOD_POCZTOWY) VALUES ('Bierutów', 'Rynek', 3, 1, 'Bierutów', '56-420');

INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES ('669-778-554', 'grzegorz.grzeg@gmail.pl');
INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES ('567-567-524', 'marian.lewy@gmail.pl');
INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES ('999-666-555', 'pracownik1@gmail.pl');
INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES ('999-666-000', 'kierownik@gmail.pl');
INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES ('111-111-111', 'super.plyty@gmail.pl');
INSERT INTO KONTAKTY (NR_TEL, EMAIL) VALUES ('222-222-222', 'super.audio@gmail.pl');

INSERT INTO KLIENCI (ID_ADRES, ID_KONTAKT, MD5_LOGIN, MD5_HASLO, IMIE_KLIENTA, NAZWISKO_KLIENTA)
VALUES ( 1, 1, 'Grzesio123', 'HasloGrzesia', 'Grzegorz', 'Grzeg');
INSERT INTO KLIENCI (ID_ADRES, ID_KONTAKT, MD5_LOGIN, MD5_HASLO, IMIE_KLIENTA, NAZWISKO_KLIENTA)
VALUES ( 2, 2, 'Marian123',  'HasloMariana', 'Marian', 'Lewy');


INSERT INTO PRACOWNICY (ID_ADRES, ID_KONTAKT, MD5_LOGIN, MD5_HASLO, IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, STANOWISKO, DATA_ZATRUDNIENIA)
VALUES ( 3, 3, 'BorysSklep', 'HasloBorysa', 'Borys', 'Borysiewicz', 'Sprzedawca', '12/10/16');
INSERT INTO PRACOWNICY (ID_ADRES, ID_KONTAKT, MD5_LOGIN, MD5_HASLO, IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, STANOWISKO, DATA_ZATRUDNIENIA)
VALUES ( 4, 4, 'KierownikSklep', 'HasloKierownka', 'Marek', 'Marecki', 'Kierownik', '23/01/14');

INSERT INTO KATEGORIE (NAZWA_KATEGORII) VALUES ('Płyta muzyczna');
INSERT INTO KATEGORIE (NAZWA_KATEGORII) VALUES ('Płyta winylowa');
INSERT INTO KATEGORIE (NAZWA_KATEGORII) VALUES ('Instrument');
INSERT INTO KATEGORIE (NAZWA_KATEGORII) VALUES ('Sprzęt audio');

INSERT INTO DOSTAWCY (NAZWA_DOSTAWCY, ID_ADRES, ID_KONTAKT) VALUES ('Hurtownia płyt SUPER PŁYTA', 5, 5);
INSERT INTO DOSTAWCY (NAZWA_DOSTAWCY, ID_ADRES, ID_KONTAKT) VALUES ('Hurtownia sprzętu audio SOUND', 6, 6);

INSERT INTO PRODUKTY (ID_KATEGORIA, ILOSC, ID_DOSTAWCA, NAZWA_PRODUKTU, CENA_NETTO, VAT) VALUES (1, 10, 1, 'AC DC "Highway to Hell (CD)"', 40, 23);
INSERT INTO PRODUKTY (ID_KATEGORIA, ILOSC, ID_DOSTAWCA, NAZWA_PRODUKTU, CENA_NETTO, VAT) VALUES (2, 20, 1, 'AC DC "Highway to Hell (Winyl)"', 120, 23);
INSERT INTO PRODUKTY (ID_KATEGORIA, ILOSC, ID_DOSTAWCA, NAZWA_PRODUKTU, CENA_NETTO, VAT) VALUES (1, 30, 1, 'Kendrick Lamar "good kid, m.A.A.d city" (CD)', 49.99, 23);
INSERT INTO PRODUKTY (ID_KATEGORIA, ILOSC, ID_DOSTAWCA, NAZWA_PRODUKTU, CENA_NETTO, VAT) VALUES (4, 40, 2, 'Słuchawki Creative "C.A.L"', 199.99, 23);
INSERT INTO PRODUKTY (ID_KATEGORIA, ILOSC, ID_DOSTAWCA, NAZWA_PRODUKTU, CENA_NETTO, VAT) VALUES (4, 50, 2, 'Wieża Philips "MCM390"', 40, 23);
INSERT INTO PRODUKTY (ID_KATEGORIA, ILOSC, ID_DOSTAWCA, NAZWA_PRODUKTU, CENA_NETTO, VAT) VALUES (3, 10, 1, 'Gitara Fender "Stratocaster RW TS"', 8000, 23);

INSERT INTO SZCZEGOLY_ZAMOWIENIA (ID_KLIENT, ID_PRACOWNIK, DATA_ZLOZENIA_ZAMOWIENIA, DATA_REALIZACJI_ZAMOWIENIA) VALUES (1, 1, '01/12/16', '07/12/16');
INSERT INTO SZCZEGOLY_ZAMOWIENIA (ID_KLIENT, ID_PRACOWNIK, DATA_ZLOZENIA_ZAMOWIENIA, DATA_REALIZACJI_ZAMOWIENIA) VALUES (2, 1, '04/12/16', '17/12/16');

INSERT INTO ZAMOWIENIA (ID_SZCZEGOLY_ZAMOWIENIA, ID_PRODUKT, ILOSC) VALUES (1, 1, 1);
INSERT INTO ZAMOWIENIA (ID_SZCZEGOLY_ZAMOWIENIA, ID_PRODUKT, ILOSC) VALUES (1, 5, 1);
INSERT INTO ZAMOWIENIA (ID_SZCZEGOLY_ZAMOWIENIA, ID_PRODUKT, ILOSC) VALUES (1, 6, 1);
INSERT INTO ZAMOWIENIA (ID_SZCZEGOLY_ZAMOWIENIA, ID_PRODUKT, ILOSC) VALUES (2, 3, 1);
INSERT INTO ZAMOWIENIA (ID_SZCZEGOLY_ZAMOWIENIA, ID_PRODUKT, ILOSC) VALUES (2, 4, 1);

SELECT * FROM WIDOK_KLIENCI;
SELECT * FROM WIDOK_PRACOWNICY;
SELECT * FROM WIDOK_DOSTAWCY;
SELECT * FROM WIDOK_PRODUKTY;
SELECT * FROM WIDOK_ZAMOWIENIA;